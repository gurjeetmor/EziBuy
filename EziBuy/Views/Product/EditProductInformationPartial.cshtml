@model EziBuy.Models.ProductViewModel




<div>
    @using (Html.BeginForm("EditProductDetail", "Product", new { ProductId = ViewBag.productId }, FormMethod.Post, new { @enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger", @ShowMessageBox = "True" })

        <div class="form-group">
            <div class="col-md-12">
                @Html.TextBoxFor(model => model.ProductName, new { @class = "form-control", @placeholder = "Product Name" })
                @Html.ValidationMessageFor(model => model.ProductName, "")
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-12">
                <input type="image" src="@Url.Content(Model.ImageUrl)" height="150" width="150" />
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-12">
                @Html.TextBoxFor(model => model.AltText, new { @class = "form-control", @placeholder = "Alternate Text" })
                @Html.ValidationMessageFor(model => model.AltText, "")
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-12">
                @Html.TextBoxFor(model => model.Caption, new { @class = "form-control", @placeholder = "Product Caption" })
                @Html.ValidationMessageFor(model => model.Caption, "")
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-12">
                @Html.TextBoxFor(model => model.Price, new { @class = "form-control", @placeholder = "Product Price" })
                @Html.ValidationMessageFor(model => model.Price, "")
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-12">
                @Html.TextAreaFor(model => model.ProductDescription, new { @class = "form-control", @placeholder = "Product Description" })
                @*@Html.TextBoxFor(model => model.ProductDescription, new { @class = "form-control", @placeholder = "Product Description" })*@
                @Html.ValidationMessageFor(model => model.ProductDescription, "")
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-12">
                @if (Model.SizesSelected != null)
                {
                    @Html.ListBoxFor(model => model.SizeIds, new MultiSelectList(ViewBag.ItemsBag, "Value", "Text", Model.SizesSelected.Select(x => x.Value)), new { @class = "form-control", multiple = "multiple" })
                }
                else
                {
                    @Html.ListBoxFor(model => model.SizeIds, new MultiSelectList(ViewBag.ItemsBag, "Value", "Text", Model.SizesSelected), new { @class = "form-control", multiple = "multiple" })
                }
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-12">
                @Html.TextBoxFor(model => model.Quantity, new { @class = "form-control", @placeholder = "Product Quatity" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-12">
                @Html.DropDownListFor(model => model.CategoryId, new SelectList(ViewBag.ListofCategory, "Id", "CategoryName"), "Choose Product Category", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CategoryId, "")
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-12">
                <input type="submit" value="Edit Product Information" class="btn btn-success" />
            </div>
        </div>
    }
</div>


<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<link href="~/Content/bootstrap.min.css" rel="stylesheet" />
<script src="~/Scripts/bootstrap.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>



